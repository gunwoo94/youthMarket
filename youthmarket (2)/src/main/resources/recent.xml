<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="recentns">



	<update id="updateProduct" parameterType="recent">
		<selectKey keyProperty="recentNo" order="BEFORE"
			resultType="integer">
			SELECT NVL(MAX(recent_no), 0) + 1 FROM recent
		</selectKey>
		<!-- USER_NO와 SELL_NO가 이미 존재하면 UPDATE, 없으면 INSERT 한다. -->
		MERGE INTO RECENT R
		USING DUAL
		ON (
		R.SELL_NO = #{sellNo}
		AND R.USER_NO =
		#{userNo}
		)
		WHEN MATCHED THEN
		UPDATE
		SET CREATE_DATE =
		TO_DATE(#{createDate}, 'YYYY-MM-DD HH24:MI:SS')
		WHEN NOT MATCHED THEN
		INSERT (
		RECENT_NO,
		SELL_NO,
		USER_NO,
		CREATE_DATE
		) VALUES (
		#{recentNo},
		#{sellNo},
		#{userNo},
		TO_DATE(#{createDate}, 'YYYY-MM-DD HH24:MI:SS')
		)
	</update>

	<select id="viewProduct" parameterType="recent"
		resultType="recent">
		<!-- 최근 본 상품 리스트를 리턴한다. -->
		<!-- 개별 Recent 객체로 리턴하여 컨트롤러에서 List로 담아서 리턴한다. -->

		SELECT
		R.RECENT_NO AS recentNo,
		R.SELL_NO AS sellNo,
		R.USER_NO AS userNo,
		S.IMAGE_SELL AS imgSell,
		R.CREATE_DATE AS crateDate  <!-- 수정된 부분 -->
		FROM RECENT R, SELL S
		WHERE R.SELL_NO = S.SELL_NO
		AND R.USER_NO = #{userNo}
		AND S.STATUS = 'Y'
		ORDER BY R.CREATE_DATE DESC  <!-- ORDER BY 절에도 테이블 별칭 추가 -->
	</select>


	<delete id="deleteProducts" parameterType="recent">
		DELETE FROM RECENT
		WHERE RECENT_NO IN (
		SELECT RECENT_NO
		FROM (
		SELECT ROW_NUMBER()
		OVER(ORDER BY CREATE_DATE DESC) AS RNUM, RECENT_NO
		FROM RECENT
		WHERE
		USER_NO = #{userNo}
		)
		WHERE RNUM > 20
		)
	</delete>

	<delete id="deleteProduct" parameterType="recent">
		DELETE FROM RECENT
		WHERE RECENT_NO = #{recentNo}
		AND SELL_NO = #{sellNo}
		AND USER_NO =
		#{userNo}
	</delete>


</mapper>